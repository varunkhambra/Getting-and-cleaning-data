Project CodeBook

The site where the data was obtained:
http://archive.ics.uci.edu/ml/datasets/Human+Activity+Recognition+Using+Smartphones
The data for the project:
https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip

The run_analysis.R script performs the following steps to clean the data:

Read X_train.txt, y_train.txt and subject_train.txt from the "UCI HAR Dataset/data/train" folder and store them in trainData, trainActivity and trainSubject variables respectively.
Read X_test.txt, y_test.txt and subject_test.txt from the "UCI HAR Dataset/data/test" folder and store them in testData, testActivity and testSubject variables respectively.

trainData, trainActivity and trainSubject are combined using cbind() to store in combinedtrainData.
testData, testActivity and testSubject are combined using cbind() to store in combinedtestData.

combinedtrainData and combinedtestData are combined using rbind() to store into combinedData.

Read the features.txt file from the "UCI HAR Dataset" folder and store the data in a variable called features.
We only extract the measurements on the mean and standard deviation. This results in a 66 indices list. 
We get a subset of combinedData with the 66 corresponding columns.

Clean the column names of the subset. We remove the "()" and "-" symbols in the names.
Read the activity_labels.txt file from the "UCI HAR Dataset" folder and store the data in a variable called activityLabels.

Transform the values of joinLabel according to the activity data frame.
We combinedData and activityLabels using merge() into mergeData to get a new cleaned 1934x69 data frame, cleanedData. Properly name the first two columns, "subject" and "activityName". The "subject" column contains integers that range from 1 to 6 inclusive; the "activityName" column contains 6 kinds of activity names; the last 66 columns contain measurements that range from -1 to 1 exclusive.

Finally, generate a second independent tidy data set with the average of each measurement for each activity and each subject. We have 30 unique subjects and 6 unique activities, which result in a 180 combinations of the two. Then, for each combination, we calculate the mean of each measurement with the corresponding combination.
Write the result out to "tidyData.txt" file in current working directory using aggregate() function.
